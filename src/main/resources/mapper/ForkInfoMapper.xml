<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.dao.ForkInfoDao">
	
	 <insert id="insert"  parameterType="com.lib.entity.ForkInfo">
		insert into fork_info(doc_id,file_id,fork_note)
		values(#{docId}, #{fileId},#{forkNote})  
	 </insert>
	
	 <delete id="delete" parameterType="Long">  
       delete from fork_info where fork_id=#{forkId}  
     </delete>  
	
	 <update id="modify" parameterType="com.lib.entity.ForkInfo">
	    update fork_info set  doc_id=#{docId},fork_note=#{forkNote} where fork_id=#{forkId}
	 </update>
     
     <select id="findByDocId" parameterType="Long" resultType="ForkInfo">
     	select * from fork_info f,doc_info d where d.doc_user_id=#{docUserId} and d.doc_id=f.doc_id
     </select>
     
     <select id="findByFileId"  resultType="ForkInfo">
     	select f.* from fork_info f,doc_info d where d.doc_user_id=#{docUserId} and f.file_id=#{fileId} and f.doc_id=d.doc_id
     </select>
     
     <select id="findByForkId" parameterType="Long" resultType="ForkInfo">
     	select * from fork_info where fork_id=#{forkId}  
     </select>
     
     <select id="findAll" parameterType="Long" resultType="com.lib.dto.ForkFileInfoVo">
     	select fork.*,doc.doc_name,file.file_name,file.*,user.user_name from user_info user,fork_info fork,doc_info doc,file_info file where fork.doc_id=doc.doc_id and user.user_id=file.file_user_id and fork.file_id=file.file_id and doc.doc_user_id=#{docUserId}  order by fork.doc_id   
     </select>
     
     <select id="findAllByDocId" parameterType="Long" resultType="com.lib.dto.ForkFileInfoVo">
     	select fork.*,doc.doc_name,file.file_name,file.*,user.user_name from user_info user,fork_info fork,doc_info doc,file_info file where fork.doc_id=doc.doc_id and user.user_id=file.file_user_id and fork.file_id=file.file_id and doc.doc_user_id=#{docUserId} and doc.doc_id=#{docId} order by fork.doc_id   
     </select>
     
     <select id="findByFileName"  resultType="com.lib.dto.ForkFileInfoVo">
     	select fork.*,doc.doc_name,file.file_name,file.*,user.user_name from user_info user,fork_info fork,doc_info doc,file_info file where fork.doc_id=doc.doc_id and user.user_id=file.file_user_id and fork.file_id=file.file_id and doc.doc_user_id=#{docUserId} and file.file_name like #{fileName} order by fork.doc_id   
     </select>
    
    <select id="findByFileNameAndDocId"  resultType="com.lib.dto.ForkFileInfoVo">
     	select fork.*,doc.doc_name,file.file_name,file.*,user.user_name from user_info user,fork_info fork,doc_info doc,file_info file where fork.doc_id=doc.doc_id and user.user_id=file.file_user_id and fork.file_id=file.file_id and doc.doc_user_id=#{docUserId} and doc.doc_id=#{docId} and file.file_name like #{fileName} order by fork.doc_id   
     </select>
     
     
</mapper>